<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>探索数据之美</title>
  <icon>http://www.typedefine.cn/icon.png</icon>
  <subtitle>不忘初心，砥砺前行！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.typedefine.cn/"/>
  <updated>2020-02-13T13:07:49.000Z</updated>
  <id>http://www.typedefine.cn/</id>
  
  <author>
    <name>山野@成都</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Thrift介绍、编译参数以及如何和maven集成</title>
    <link href="http://www.typedefine.cn/2020/02/13/thrift%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E6%94%AF%E6%8C%81%E5%8F%82%E6%95%B0/"/>
    <id>http://www.typedefine.cn/2020/02/13/thrift%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E6%94%AF%E6%8C%81%E5%8F%82%E6%95%B0/</id>
    <published>2020-02-13T13:07:49.000Z</published>
    <updated>2020-02-13T13:07:49.000Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是Thrift&quot;&gt;&lt;a href=&quot;#什么是Thrift&quot; class=&quot;headerlink&quot; title=&quot;什么是Thrift?&quot;&gt;&lt;/a&gt;什么是Thrift?&lt;/h1&gt;&lt;p&gt;Thrift是一种接口描述语言和二进制通讯协议，它被用来定义和创建跨语言的服务。它被当作一个远程过程调用（RPC）框架来使用，是由Facebook为“大规模跨语言服务开发”而开发的。它通过一个代码生成引擎联合了一个软件栈，来创建不同程度的、无缝的跨平台高效服务，可以使用C#、C++（基于POSIX兼容系统）、Cappuccino、Cocoa、Delphi、Erlang、Go、Haskell、Java、Node.js、OCaml、Perl、PHP、Python、Ruby和Smalltalk。虽然它以前是由Facebook开发的，但它现在是Apache软件基金会的开源项目了。该实现被描述在2007年4月的一篇由Facebook发表的技术论文中，该论文现由Apache掌管。&lt;/p&gt;
&lt;p&gt;目前流行的服务调用方式有很多种，例如基于 SOAP 消息格式的 Web Service，基于 JSON 消息格式的 RESTful 服务等。其中所用到的数据传输方式包括 XML，JSON 等，然而 XML 相对体积太大，传输效率低，JSON 体积较小，新颖，但还不够完善。本文将介绍由 Facebook 开发的远程服务调用框架 Apache Thrift，它采用接口描述语言定义并创建服务，支持可扩展的跨语言服务开发，所包含的代码生成引擎可以在多种语言中，如 C++, Java, Python, PHP, Ruby, Erlang, Perl, Haskell, C#, Cocoa, Smalltalk 等创建高效的、无缝的服务，其传输数据采用二进制格式，相对 XML 和 JSON 体积更小，对于高并发、大数据量和多语言的环境更有优势。本文将详细介绍 Thrift 的使用，并且提供丰富的实例代码加以解释说明，帮助使用者快速构建服务。Thrift的下载地址是：&lt;a href=&quot;http://thrift.apache.org/download&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://thrift.apache.org/download&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;thrift-exe支持的参数有哪些？&quot;&gt;&lt;a href=&quot;#thrift-exe支持的参数有哪些？&quot; class=&quot;headerlink&quot; title=&quot;thrift.exe支持的参数有哪些？&quot;&gt;&lt;/a&gt;thrift.exe支持的参数有哪些？&lt;/h1&gt;
    
    </summary>
    
    
      <category term="thrift" scheme="http://www.typedefine.cn/categories/thrift/"/>
    
    
      <category term="thrift" scheme="http://www.typedefine.cn/tags/thrift/"/>
    
      <category term="compiler" scheme="http://www.typedefine.cn/tags/compiler/"/>
    
      <category term="command line options" scheme="http://www.typedefine.cn/tags/command-line-options/"/>
    
  </entry>
  
  <entry>
    <title>为什么会害怕人工智能</title>
    <link href="http://www.typedefine.cn/2020/02/12/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E5%AE%B3%E6%80%95%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    <id>http://www.typedefine.cn/2020/02/12/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E5%AE%B3%E6%80%95%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/</id>
    <published>2020-02-12T03:08:30.000Z</published>
    <updated>2020-02-12T03:08:30.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;原作者： 保罗▪福特 2015年2月11日&lt;br&gt;译者： 山野@成都 2017&lt;/p&gt;
&lt;h1 id=&quot;在阅读之前&quot;&gt;&lt;a href=&quot;#在阅读之前&quot; class=&quot;headerlink&quot; title=&quot;在阅读之前&quot;&gt;&lt;/a&gt;在阅读之前&lt;/h1&gt;&lt;p&gt;这篇文章&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot; aria-label=&quot;https://www.technologyreview.com/s/534871/our-fear-of-artificial-intelligence/
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;是我在2017年在麻省理工评论（MIT Technology Review）上看到的翻译的。 作者是保罗▪福特&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot; aria-label=&quot;https://www.technologyreview.com/profile/paul-ford/
&quot;&gt;[2]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;。距离当初的翻译已经过去了2年。现在人工智能的概念已经深入到各行各业，从大家经常接触的SNS社交数据挖掘、智能客服、B2C商品推荐系统、新闻推荐系统、智能汽车，以及到更广泛的更偏向于传统的领域，比如医疗、城市规划、交通领域、建筑领域、社区管理、行政服务等等的一切都在提到一个词，那就是“智慧”，“智能”。&lt;/p&gt;
&lt;p&gt;这一切的背后都和机器学习技术（深度学习、加强学习）等等的兴起，以及更加容易使用的框架和API，比如谷歌的tensorflow；更加容易处理大规模数据的框架，比如Apache Spark、Apache Hadoop套件等，这些都助力于并提高了各种业务对于基于大量数据的建模和预测能力。而这些能力就是大家所说的人工智能。&lt;/p&gt;
&lt;p&gt;下面这篇文章并没有讲解具体的某种应用于人工智能的技术，而是从更高更抽象的层面，从社会和伦理的层面探讨了人工智能所带来的一些问题。&lt;/p&gt;
&lt;p&gt;下面是正文：&lt;/p&gt;
    
    </summary>
    
    
      <category term="科技 - 人工智能" scheme="http://www.typedefine.cn/categories/%E7%A7%91%E6%8A%80-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
      <category term="翻译" scheme="http://www.typedefine.cn/categories/%E7%A7%91%E6%8A%80-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="人工智能" scheme="http://www.typedefine.cn/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
      <category term="未来科技" scheme="http://www.typedefine.cn/tags/%E6%9C%AA%E6%9D%A5%E7%A7%91%E6%8A%80/"/>
    
      <category term="麻省理工评论" scheme="http://www.typedefine.cn/tags/%E9%BA%BB%E7%9C%81%E7%90%86%E5%B7%A5%E8%AF%84%E8%AE%BA/"/>
    
      <category term="自由意志" scheme="http://www.typedefine.cn/tags/%E8%87%AA%E7%94%B1%E6%84%8F%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>maven构建的一些小技巧</title>
    <link href="http://www.typedefine.cn/2020/02/10/maven%E6%9E%84%E5%BB%BA%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://www.typedefine.cn/2020/02/10/maven%E6%9E%84%E5%BB%BA%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/</id>
    <published>2020-02-10T08:02:55.000Z</published>
    <updated>2020-02-10T08:02:55.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;maven从设计上来说非常的简单，但是却是一个非常强大的工具。很多人将maven只是当做一个构建工具（从源代码生成可运行软件），但是实际上可以将maven当做一个项目管理工具，比如工程管理、插件管理、Jar包依赖管理、软件发布仓库管理等。&lt;/p&gt;
&lt;p&gt;下面讲解一些在使用maven当中所遇到的一些小的技巧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Building tools - maven" scheme="http://www.typedefine.cn/categories/Building-tools-maven/"/>
    
    
      <category term="maven" scheme="http://www.typedefine.cn/tags/maven/"/>
    
      <category term="profiles" scheme="http://www.typedefine.cn/tags/profiles/"/>
    
      <category term="settings.xml" scheme="http://www.typedefine.cn/tags/settings-xml/"/>
    
      <category term="mirrorOf" scheme="http://www.typedefine.cn/tags/mirrorOf/"/>
    
  </entry>
  
  <entry>
    <title>通过maven自动化构建protobuf class代码</title>
    <link href="http://www.typedefine.cn/2020/02/10/%E9%80%9A%E8%BF%87maven%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BAprotobuf/"/>
    <id>http://www.typedefine.cn/2020/02/10/%E9%80%9A%E8%BF%87maven%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BAprotobuf/</id>
    <published>2020-02-10T05:30:03.000Z</published>
    <updated>2020-02-10T05:30:03.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;通过maven自动化构建protocal-buffer&quot;&gt;&lt;a href=&quot;#通过maven自动化构建protocal-buffer&quot; class=&quot;headerlink&quot; title=&quot;通过maven自动化构建protocal buffer&quot;&gt;&lt;/a&gt;通过maven自动化构建protocal buffer&lt;/h2&gt;&lt;p&gt;当对代码进行工程构建的时候，如果能够尽可能的自动化，这样对于提升整个软件质量、节省人力成本、减少因为人工干预导致的各种不可预知的错误是很好。&lt;br&gt;从protobuf的官方文档来看，通过cmd调用protoc当然可以生成相应的代码，但是对构建不够友好。于是，可以考虑通过maven来进行自动化构建，在启动maven构建的时候，自动调用protoc，生成代码，并打包成相应的jar包，集成到工程发布包中。&lt;br&gt;这里有2种方式，如下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Building tools - maven" scheme="http://www.typedefine.cn/categories/Building-tools-maven/"/>
    
      <category term="protocol buffer" scheme="http://www.typedefine.cn/categories/Building-tools-maven/protocol-buffer/"/>
    
    
      <category term="maven" scheme="http://www.typedefine.cn/tags/maven/"/>
    
      <category term="protocol" scheme="http://www.typedefine.cn/tags/protocol/"/>
    
      <category term="buffer" scheme="http://www.typedefine.cn/tags/buffer/"/>
    
  </entry>
  
  <entry>
    <title>不同linux发行版软件安装工具</title>
    <link href="http://www.typedefine.cn/2020/02/09/%E4%B8%8D%E5%90%8Clinux%E5%8F%91%E8%A1%8C%E7%89%88%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%B7%A5%E5%85%B7/"/>
    <id>http://www.typedefine.cn/2020/02/09/%E4%B8%8D%E5%90%8Clinux%E5%8F%91%E8%A1%8C%E7%89%88%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%B7%A5%E5%85%B7/</id>
    <published>2020-02-09T08:40:41.000Z</published>
    <updated>2020-02-09T08:40:41.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;RPM&quot;&gt;&lt;a href=&quot;#RPM&quot; class=&quot;headerlink&quot; title=&quot;RPM&quot;&gt;&lt;/a&gt;RPM&lt;/h3&gt;&lt;p&gt;RPM是Red-Hat Package Manager（RPM软件包管理器）的缩写，这一文件格式名称虽然打上了RedHat的标志&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot; aria-label=&quot;Redhat guide: https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/5/html/deployment_guide/
&quot;&gt;[1]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;，但是其原始设计理念是开放式的，现在包括OpenLinux、S.u.S.E.以及Turbo Linux等Linux的分发版本都有采用，可以算是公认的行业标准了。&lt;/p&gt;
&lt;h3 id=&quot;apt-get&quot;&gt;&lt;a href=&quot;#apt-get&quot; class=&quot;headerlink&quot; title=&quot;apt-get&quot;&gt;&lt;/a&gt;apt-get&lt;/h3&gt;&lt;p&gt;apt-get&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--error hint--medium hint--rounded hint--bounce&quot; aria-label=&quot;RPM使用参考：https://www.cnblogs.com/xiaochaohuashengmi/archive/2011/10/08/2203153.html
&quot;&gt;[2]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;，是一条linux命令，适用于deb包管理式的操作系统，主要用于自动从互联网的软件仓库中搜索、安装、升级、卸载软件或操作系统。主要适用于Debian、Ubuntu的系统。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.typedefine.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.typedefine.cn/tags/Linux/"/>
    
  </entry>
  
</feed>
